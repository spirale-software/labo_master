package services.proposal;

import javax.inject.Inject;

import models.Field;
import models.Proposal;
import models.ProposalContent;
import models.ProposalContentVM;
import models.User;
import models.WritingContent;
import services.data.dao.ChannelDAO;
import services.data.dao.FieldChannelDAO;
import services.data.dao.FieldDAO;
import services.data.dao.ProposalDAO;
import services.data.dao.WritingContentDAO;
import services.data.jpaDao.UserDaoJPA;

public class ContentManager {
	
	private ProposalContentVM proposalContentVM;
	private Field field;
	
	private WritingContentDAO writingContentDAO;
	private ProposalDAO proposalDAO;
	private UserDaoJPA userDAO;
	private FieldDAO fieldDAO;
	private ChannelDAO channelDAO;
	private FieldChannelDAO fieldChannelDAO;
	
	@Inject
	public ContentManager(WritingContentDAO writingContentDAO, ProposalDAO proposalDAO, UserDaoJPA userDAO, FieldDAO fieldDAO,
			ChannelDAO channelDAO, FieldChannelDAO fieldChannelDAO) {
		this.writingContentDAO = writingContentDAO;
		this.proposalDAO = proposalDAO;
		this.userDAO = userDAO;
		this.fieldDAO = fieldDAO;
		this.channelDAO = channelDAO;
		this.fieldChannelDAO = fieldChannelDAO;	
	}
	
	public void manageProposalContent(ProposalContentVM proposalContentVM, Long idOfContentWriter) {
		User writer = userDAO.getUserById(idOfContentWriter);
		
		Proposal concernedProposal = null;
		
		ProposalContent proposalContent = this.getProposalContent(proposalContentVM);
		
		WritingContent writingContent = new WritingContent();
		writingContent.setConcernedProposal(concernedProposal);
		writingContent.setContent(proposalContent);
		writingContent.setWriter(writer);
		
	}
	
	public void setProposalContentVM(ProposalContentVM proposalContentVM) {
		this.proposalContentVM = proposalContentVM;
	}
	
	private ProposalContent getProposalContent(ProposalContentVM proposalContentVM) {
		
		return null;
	}
	

}
