package controllers;

import play.mvc.Controller;
import java.util.List;
import javax.inject.Inject;
import models.Proposal;
import models.ProposalContentVM;
import models.ProposalVM;
import models.User;
import models.UserVM;
import play.data.Form;
import play.data.FormFactory;
import play.db.jpa.Transactional;
import play.mvc.Controller;
import play.mvc.Result;
import play.mvc.Security.Authenticated;
import services.data.dao.ProposalDAO;
import services.data.dao.UserDAO;
import services.data.jpaDao.UserDaoJPA;
import services.general.CustomAuthenticator;
import services.proposal.ProposalContentManager;
import services.proposal.ProposalEditionManager;
import services.proposal.ProposalManager;
import views.html.*;

@Authenticated(CustomAuthenticator.class)
public class ProposalContentController extends Controller {

	@Transactional
	public Result proposalContentAction(Long idProposal) {
		Proposal proposal = this.proposalDAO.getProposalById(idProposal);
		Form<ProposalContentVM> proposalContentForm = formFactory.form(ProposalContentVM.class);

		if(this.isFormSubmitted()) {
			
			flash("success", "Le contenu de la proposition a bien été enregistré");
		}
		
		return ok(proposalContent.render(proposalContentForm, proposal));
	}
	
	
	
	/**************************************** Helpers Methods **********************************/
	/*******************************************************************************************/
	public boolean isFormSubmitted() {
		return request().method().equals("POST");
	}
}
