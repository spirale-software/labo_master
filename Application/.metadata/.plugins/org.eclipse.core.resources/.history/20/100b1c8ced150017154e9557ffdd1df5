package controllers;

import java.util.List;

import javax.inject.Inject;

import models.Proposal;
import models.ProposalVM;
import models.User;
import models.UserVM;
import play.data.Form;
import play.data.FormFactory;
import play.db.jpa.Transactional;
import play.mvc.Controller;
import play.mvc.Result;
import services.data.dao.IProposalDAO;
import services.data.dao.IUserDAO;
import services.data.jpaDao.UserDAO;
import services.proposal.ProposalBuilder;
import views.html.*;

public class ProposalController extends Controller {

	private final FormFactory formFactory;
	private final IProposalDAO proposalDAO;
	private ProposalBuilder proposalBuilder;

	@Inject
	public ProposalController(FormFactory formFactory, IProposalDAO proposalDAO, ProposalBuilder proposalBuilder) {

		this.formFactory = formFactory;
		this.proposalDAO = proposalDAO;
		this.proposalBuilder = proposalBuilder;
	}

	public Result proposalAction() {
		return this.getDefaultProposal(false);
	}

	@Transactional
	public Result addProposalAction() { 
		ProposalVM proposalVM= formFactory.form(ProposalVM.class).bindFromRequest().get();
		proposalVM.setProposalAuthorId(Long.parseLong(session("idUser")));
		
		proposalBuilder.setProposalVM(proposalVM);
		Proposal newProposal = proposalBuilder.getProposal();
		
		proposalDAO.insertProposal(newProposal);
	   
		return this.getDefaultProposal(true);
	}

	public Result getAllProposalsAction() {
		List<Proposal> listProposals = proposalDAO.get10NewestProposals();
		
		return ok(proposals.render(listProposals, session("prenom")));
	}

	public Result detailProposalAction() {
		return ok();
	}

	public Result editProposalAction(Long idProposal) {
		return ok("Edit Proposal work!!!. idProposal" + idProposal);
	}

	public Result deleteProposalAction() {
		return ok();
	}
	
	private Result getDefaultProposal(boolean isAlert) {
		Form<ProposalVM> proposalVM = formFactory.form(ProposalVM.class);
		return ok(proposalForm.render(proposalVM, session("username"), isAlert));	
	}
	 

}
